/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library;

import EBook.EBook;
import EBook.Libreria;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *<p>itle : RicercaDialogbox </p> 
 * <p> Discription : il dialog box utilizzato per la ricerca nela mia libreria . </p>
     * <p> Attraverso il dialog box e possibile fare ujna ricerca di un autore o di un titolo e autore e titolo nella libreria e </p>
     * <p> il risultato della ricerca  vera vissualizzato nella stessa dialog box(sotto) nella quale Ã¨ possibile navigare tra i risultati trovati. </p>
 * @author Bonsu
 */
public class RicercaDialogBox extends java.awt.Dialog {
   private static Libreria lib;
   private String title;
   private String autor;
   private String yrs;
   private Vector <EBook> local;
   private final int size;
   private int countRis;
   
   
   
   /**
     * <p> il costruttore prende in ingresso la libreria 
     * @param parent  frame principale
     * @param modal  variabile booleana
     * @param lyb libereria 
     */
    public RicercaDialogBox(java.awt.Frame parent, boolean modal,Libreria lyb) {
        super(parent, modal);
        this.lib=lyb;
        initComponents();
        setFields();
        sucBtt.setEnabled(false);
        precBtt.setEnabled(false);
        local=null; 
        countRis=0;
        size=lib.getSizeLibreria();
        ricercBtt.setEnabled(false);
        this.setTitle("Search");
       // local = new  Vector (0);
       this.setSize(522, 490);
       this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        titRB = new javax.swing.JRadioButton();
        autRB = new javax.swing.JRadioButton();
        titolTF = new javax.swing.JTextField();
        autTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ricercBtt = new javax.swing.JButton();
        risRicTitTF = new javax.swing.JTextField();
        risRicAutTF = new javax.swing.JTextField();
        risRicAnnTF = new javax.swing.JTextField();
        risRicNPTF = new javax.swing.JTextField();
        precBtt = new javax.swing.JButton();
        sucBtt = new javax.swing.JButton();
        esciBtt = new javax.swing.JButton();
        sepTF = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();

        jTextField2.setText("jTextField2");

        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titRB.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        titRB.setText("Titolo");
        titRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titRBActionPerformed(evt);
            }
        });
        add(titRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 31, 98, -1));

        autRB.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        autRB.setText("Autore");
        autRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autRBActionPerformed(evt);
            }
        });
        add(autRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, 98, -1));

        titolTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        titolTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titolTFActionPerformed(evt);
            }
        });
        titolTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titolTFKeyTyped(evt);
            }
        });
        add(titolTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 32, 238, 24));

        autTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        autTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                autTFKeyTyped(evt);
            }
        });
        add(autTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 74, 238, 25));

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setText("Titolo");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 177, 98, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel2.setText("Autore");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 208, 98, 24));

        jLabel3.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel3.setText("Anno");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 98, 23));

        jLabel4.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel4.setText("Numero Pagine");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 294, -1, -1));

        ricercBtt.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        ricercBtt.setText("Ricerca");
        ricercBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ricercBttActionPerformed(evt);
            }
        });
        add(ricercBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 94, -1));

        risRicTitTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        risRicTitTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                risRicTitTFActionPerformed(evt);
            }
        });
        add(risRicTitTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 174, 238, -1));

        risRicAutTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        risRicAutTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                risRicAutTFActionPerformed(evt);
            }
        });
        add(risRicAutTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 208, 238, -1));

        risRicAnnTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        risRicAnnTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                risRicAnnTFActionPerformed(evt);
            }
        });
        add(risRicAnnTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 250, 238, -1));

        risRicNPTF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        risRicNPTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                risRicNPTFActionPerformed(evt);
            }
        });
        add(risRicNPTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 291, 238, -1));

        precBtt.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        precBtt.setText("Prec");
        precBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precBttActionPerformed(evt);
            }
        });
        add(precBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 70, 20));

        sucBtt.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        sucBtt.setText("Succ");
        sucBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sucBttActionPerformed(evt);
            }
        });
        add(sucBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 70, 20));

        esciBtt.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        esciBtt.setText("Esci");
        esciBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esciBttActionPerformed(evt);
            }
        });
        add(esciBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 400, 101, -1));

        sepTF.setEditable(false);
        sepTF.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        sepTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sepTF.setText("/");
        add(sepTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 22, -1));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("RISULTATO");
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 145, 507, -1));

        jTextField8.setEditable(false);
        jTextField8.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 30, -1));

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, 20, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void titRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titRBActionPerformed
       //  System.out.println("Oh Boy" + "Ciao");
        if(titRB.isSelected()){
            titolTF.setEditable(true);
            
        }
        else{
            titolTF.setEditable(false);
            
        }
    }//GEN-LAST:event_titRBActionPerformed

    private void autRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autRBActionPerformed
        if(autRB.isSelected()){
            autTF.setEditable(true);
            
        }
        else{
            autTF.setEditable(false);
            
        }
    }//GEN-LAST:event_autRBActionPerformed
    
    private void ricercBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ricercBttActionPerformed
         local = new  Vector (0);
        EBook libro;
        setfieldsII();
        title=titolTF.getText();
        autor=autTF.getText();
        
    //    System.out.println("Titolo : " +title);
    //    System.out.println("Autore : " +autor);
        
        for(int i=0; i<size;i++){
                libro = lib.getElementAt(i);
               if(ricercaR(title,libro.getTitolo()) && ricercaR(autor,libro.getAutore()) ){
      //             System.out.println(ricercaR(title,libro.getTitolo()) && ricercaR(autor,libro.getAutore()));
                   local.add(libro);                     
               }
        //       System.out.println("nella funzione di ricerca dikmesione del vector : "+ local.size());
           }
       // System.out.println("nella funzione di ricerca dimesione del vector : "+ local.size());
         if(local.isEmpty()){
             sucBtt.setEnabled(false);
            precBtt.setEnabled(false);
            jTextField9.setText("");
            jTextField8.setText("");
            JOptionPane.showMessageDialog(this, "Nessun elemento trovato ");
            
           
                    
         }
          else{ 
              sucBtt.setEnabled(true);
            precBtt.setEnabled(true);
              jTextField9.setText(String.valueOf(local.size()));
               jTextField8.setText(String.valueOf(countRis+1));
                risSearch(countRis); 
    }//GEN-LAST:event_ricercBttActionPerformed
    }
    private void esciBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esciBttActionPerformed
         this.dispose();
    }//GEN-LAST:event_esciBttActionPerformed

    private void risRicTitTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_risRicTitTFActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_risRicTitTFActionPerformed

    private void risRicAutTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_risRicAutTFActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_risRicAutTFActionPerformed

    private void risRicAnnTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_risRicAnnTFActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_risRicAnnTFActionPerformed

    private void risRicNPTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_risRicNPTFActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_risRicNPTFActionPerformed

    private void sucBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sucBttActionPerformed
      
      if(countRis<(local.size()-1) && sucBtt.isEnabled()){
            countRis++;     
                  risSearch(countRis);
                    jTextField8.setText(String.valueOf(countRis+1));
                     jTextField9.setText(String.valueOf(local.size()));
                     if(countRis>=0){
                         precBtt.setEnabled(true);
                     }
       }
             if(countRis ==local.size()-1){
                                   
                      sucBtt.disable();
                        sucBtt.setEnabled(false);  
                    
                 
                 
             }
    }//GEN-LAST:event_sucBttActionPerformed

    private void precBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precBttActionPerformed
      if(countRis>=0 && precBtt.isEnabled() ){
                          System.out.println(local.size());
            countRis--;    
            risSearch(countRis);
            jTextField8.setText(String.valueOf(countRis+1));
           jTextField9.setText(String.valueOf(local.size()));
          if(countRis<=0){
              precBtt.setEnabled(false);
          }
               
           
           
           
           
           
           if(countRis<=local.size()){
               sucBtt.setEnabled(true);
           }
       }
         else{ 

                      precBtt.disable();
                        precBtt.setEnabled(false);  
                                 
      }
         
    }//GEN-LAST:event_precBttActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
     System.out.println(local.size());
        if(local.size()!=0 ){
             System.out.println(local.size());
            
            jTextField8.setText(String.valueOf(countRis));
           
        }
        else{
                 precBtt.setEnabled(false);
                
                 sucBtt.setEnabled(false);
             }
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
        int dim = local.size(); 
        Integer t = 1213;
        if(!local.isEmpty())
            jTextField9.setText(t.toString());
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void titolTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titolTFKeyTyped
        if( !(titRB.isSelected()) && titolTF.getText().equals(""))
            ricercBtt.setEnabled(false);
        
        else ricercBtt.setEnabled(true);
    }//GEN-LAST:event_titolTFKeyTyped

    private void titolTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titolTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titolTFActionPerformed

    private void autTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_autTFKeyTyped
         if( !(autRB.isSelected()) && titolTF.getText().equals(""))
            ricercBtt.setEnabled(false);
        
        else ricercBtt.setEnabled(true);
    }//GEN-LAST:event_autTFKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                RicercaDialogBox dialog = new RicercaDialogBox(new java.awt.Frame(), true,lib);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
   /**
    * <p> Title : ricercaR </p> 
    * <p> Discription: prende in ingresso due  stringhe , uno corrisponde alla stringa inserito dall'utente nel 
    * textfield mentro la seconda stringa corrisponde  al campo autore o titolo della libreria . </p>
    * <p> Retorna true se il textfield e vuoto oppure se trova una stringa nella libreria che corrisponde alla string inserito dall'utnete
    * @param st  la porala inserito dall'uatente da ricerca nella libreria . </p> 
    * @param stringa str
    * @return vero se un libro corrispondente nella libreria altrimenti falso
    */
    
    public boolean ricercaR (String st,String stringa){
             if(st.equals("") || st.equals(stringa)){
               //  System.out.println("Primo stringa :" + st);
               //  System.out.println("seconda stringa: "+stringa);
              //   System.out.println(st.equals(stringa));
                         return true;
                    }
        return false;
    }
   
   
/**
 * <p>Title  risSearch  
 * <p> Discription : setta i campi del risultato con i dettagli se un libro cercato e' nella libreria .</p>
 * @param var  intero contatore che conta il contenuto del risultato della mia ricerca
 */

 public void risSearch(int var){
    risRicTitTF.setText(local.get(var).getTitolo());
    risRicAutTF.setText(local.get(var).getAutore());
    risRicAnnTF.setText(local.get(var).getAnno());
    risRicNPTF.setText(local.get(var).getNumPagine());
 
             
   }
 /**
  * <p>Title:  setFields </p>
  * <p> Discription : setta i textfields dcokntenete i risultati della ricerca a false . </p> 
  */
 public void setFields(){
      titolTF.setEditable(false);
        autTF.setEditable(false);
     //   annTF.setEditable(false);
        risRicTitTF.setEditable(false);
        risRicAutTF.setEditable(false);
        risRicAnnTF.setEditable(false);
        risRicNPTF.setEditable(false);
    
 }
 /**
  * <p>Title :setfieldsII </p> 
  * <p> Discription : cancella i contenti del textfields . </p>
  * 
  */
 public void setfieldsII(){
    risRicTitTF.setText("");
    risRicAutTF.setText("");
    risRicAnnTF.setText("");
    risRicNPTF.setText("");
 }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton autRB;
    private javax.swing.JTextField autTF;
    private javax.swing.JButton esciBtt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton precBtt;
    private javax.swing.JButton ricercBtt;
    private javax.swing.JTextField risRicAnnTF;
    private javax.swing.JTextField risRicAutTF;
    private javax.swing.JTextField risRicNPTF;
    private javax.swing.JTextField risRicTitTF;
    private javax.swing.JTextField sepTF;
    private javax.swing.JButton sucBtt;
    private javax.swing.JRadioButton titRB;
    private javax.swing.JTextField titolTF;
    // End of variables declaration//GEN-END:variables
}
